# Query: SocketService
# ContextLines: 1

37 results - 8 files

SocketService.ts:
   3  //class component for handling clients instance of socket connection and exported to any components that need to interact with said instance.
   4: function getSocketService() {
   5    return {

  60  
  61: export default getSocketService();
  62  

components/BattleView.tsx:
    4  import { Frame } from "./CharacterView";
    5: import getSocketService as SocketService from "../SocketService";
    6  import { StatView } from "./StatView";

  176  
  177:   const { socket, update } = SocketService as any;
  178  

components/EnemyView.tsx:
    6  import { StatView } from "./StatView";
    7: import getSocketService as SocketService from "../SocketService";
    8  const emerge = keyframes`

  120              onClick={() => {
  121:               SocketService.update({
  122                  type: "enemyClicked",

components/Lobby.tsx:
  1  import { Frame } from "./CharacterView";
  2: import getSocketService as SocketService from "../SocketService";
  3  export const Lobby = ({ lobby }) => {

  5      e.preventDefault();
  6:     SocketService.sendMessage(e.target.message_body.value, lobby.id);
  7    };

components/LobbyListView.tsx:
   2  import { MenuContainer } from "./MenuView";
   3: import getSocketService as SocketService from "../SocketService";
   4  import { Frame } from "./CharacterView";

  12      e.preventDefault();
  13:     SocketService.initLobby(e.target.lobby_name.value);
  14    };
  15    useEffect(() => {
  16:     SocketService.getGames();
  17:     SocketService.socket.on("lobby_state_res", (lobby) => {
  18        setLobby(lobby);
  19      });
  20:     SocketService.socket.on("get_lobby_res", (lobbies) => {
  21        setLobbyList([...lobbies]);

  33                  onClick={() => {
  34:                   SocketService.joinLobby(game.id);
  35                    setLobby(game);

  43              style={{ zIndex: "3" }}
  44:             onClick={() => SocketService.getGames()}
  45            >

components/MenuView.tsx:
    6  import { PartyMenuView } from "./PartyMenuView";
    7: import getSocketService as SocketService from "../SocketService";
    8  import gameData, { gameDataProps } from "../gameData";

   70    const [matchId, setMatchId] = useState(false);
   71:   const { socket } = SocketService as any;
   72    const battleStart = () => {
   73:     SocketService.initGame();
   74    };

   88              !obj.participatingSockets.find(
   89:               (socket) => socket === SocketService.socket.id
   90              )
   91            ) {
   92:             SocketService.update({
   93                type: "addPlayerSocket",
   94:               socket: SocketService.socket.id,
   95                id: obj.id,

  116            <PartyWrap>
  117:             <LoadButton onClick={() => SocketService.resumeGame()}>
  118                Resume

components/SpellTable.tsx:
    4  import { Frame } from "./CharacterView";
    5: import getSocketService as SocketService from "../SocketService";
    6  

   73          console.log({ es: e });
   74:         SocketService.update({
   75            type: "spellSelect",

   81          console.log({ es: e });
   82:         SocketService.update({
   83            type: "spellSelect",

   89          console.log({ es: e });
   90:         SocketService.update({
   91            type: "enemySelect",

   97          console.log({ es: e });
   98:         SocketService.update({
   99            type: "enemySelect",

  105          console.log({ es: e });
  106:         SocketService.update({
  107            type: "pause",

pages/index.tsx:
   5  import { ShootingStarView } from "../components/ShootingStarView";
   6: import getSocketService as SocketService from "../SocketService";
   7  

   9    useEffect(() => {
  10:     SocketService.connect();
  11    }, []);
